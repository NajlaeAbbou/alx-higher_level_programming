The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer

Checking for module docstring:
	 >>> m = __import__("0-add_integer").__doc__
	 >>> len(m) > 1
	 True

Checking for function docstring:
	 >>> f = __import__("0-add_integer").add_integer.__doc__
         >>> len(f) > 1
         True

Checking regular addition:
	 >>> add_integer(2, 6)
	 8

Checking positive with negative:
	 >>> add_integer(3, -7)
	 -4

Checking negative with positive:
	 >>> add_integer(-7, 8)
	 1

Checking addition over multiple values:
	 >>> [add_integer(j, j ** 2) for j in range(6)]
	 [0, 2, 6, 12, 20, 30]

Checking float with int:
	 >>> add_integer(4.3, 3)
	 7

Checking int with float:
	 >>> add_integer(9, 2.6)
	 11

Checking both float:
	 >>> add_integer(6.5, 2.9)
	 8

Checking for passed NaN:
	 >>> add_integer(5, float('nan'))
	 Traceback (most recent call last):
	 ...
	 ValueError: cannot convert float NaN to integer

Checking for passed inf:
	 >>> add_integer(9, float('inf'))
	 Traceback (most recent call last):
	 ...
	 OverflowError: cannot convert float infinity to integer

Checking super long int:
	 >>> add_integer(99999999999999999999999999999999, 1)
	 100000000000000000000000000000000

Checking non-number with number:
	 >>> add_integer([2], 5)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

Checking number with non-number:
	 >>> add_integer(6, "HELLO")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

Checking non-number with non-number:
	 >>> add_integer((3,), {"k": "v"})
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer

Checking bool with number:
	 >>> add_integer(True, 6)
	 Traceback (most recent call last):
         ...
         TypeError: a must be an integer

Checking number with bool:
	 >>> add_integer(2, True)
         Traceback (most recent call last):
         ...
         TypeError: b must be an integer
